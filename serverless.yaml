service: lubycon-event-gateway

package:
  individually: true

provider:
  name: aws
  runtime: python3.8
  region: ap-northeast-2
  stage: ${opt:stage, "alpha"}
  profile: lubycon-mgmt
  lambdaHashingVersion: 20201221

plugins:
  - serverless-python-requirements
  - serverless-domain-manager
  - serverless-plugin-log-retention
custom:
  pythonRequirements:
    dockerizePip: true
  logRetentionInDays: 7
  customDomain:
    domainName: ${self:custom.${self:provider.stage}.subDomainName}.lubycon.io
    stage: ${self:provider.stage}
    certificateArn: arn:aws:acm:us-east-1:554707519121:certificate/652be07a-1826-43e6-a66e-1b6c36855be9 # includes *.lubycon, *.alpha.lubycon
    autoDomain: true
  alpha:
    subDomainName: event-gateway.alpha
    eventLogSqsArn: arn:aws:sqs:ap-northeast-2:554707519121:lubycon-alpha-an2-event-gateway-sqs
    eventLogSqsUrl: https://sqs.ap-northeast-2.amazonaws.com/554707519121/lubycon-alpha-an2-event-gateway-sqs
    executionRoleArn: arn:aws:iam::554707519121:role/lubycon-alpha-an2-event-gateway-role
  production:
    subDomainName: event-gateway
    eventLogSqsArn: arn:aws:sqs:ap-northeast-2:554707519121:lubycon-alpha-an2-event-gateway-sqs
    eventLogSqsUrl: https://sqs.ap-northeast-2.amazonaws.com/554707519121/lubycon-mgmt-an2-event-gateway-sqs
    executionRoleArn: arn:aws:iam::554707519121:role/lubycon-mgmt-an2-event-gateway-role
  vpc:
    subnet_ids: [subnet-035f9023272c2244f, subnet-0e6637695b17ba32d, subnet-05391a691edad8eae]
    security_group_ids:
      - sg-019f346d017f05d02 # lubycon-mgmt-an2-sg-pri
      - sg-0a57ac6c25d77831e # lubycon-mgmt-an2-sg-pri-lambda
      - sg-01b1b755d3c139429 # lubycon-mgmt-an2-sg-pri-lambda-event-gateway
  tags:
    Product: Lubycon
    Duty: LubyconDevOps
    Stack: ${self:provider.stage}
    Role: event-gateway

functions:
  api:
    package:
      patterns:
        - app/*
    handler: app.main.api_handler
    memorySize: 128
    timeout: 5
    vpc:
      subnetIds:
        ${self:custom.vpc.subnet_ids}
      securityGroupIds:
        ${self:custom.vpc.security_group_ids}
    role: ${self:custom.${self:provider.stage}.executionRoleArn}
    tags: ${self:custom.tags}
    #architectures: arm64 서울리전 존-버
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
      AWS_EVENT_LOG_SQS_URL: ${self:custom.${self:provider.stage}.eventLogSqsUrl}
    events:
      - http:
          method: any
          path: /{proxy+}
  worker:
    package:
      patterns:
        - app/*
    handler: app.main.worker_handler
    memorySize: 128
    timeout: 60
    vpc:
      subnetIds:
        ${self:custom.vpc.subnet_ids}
      securityGroupIds:
        ${self:custom.vpc.security_group_ids}
    role: ${self:custom.${self:provider.stage}.executionRoleArn}
    tags: ${self:custom.tags}
    #architectures: arm64 서울리전 존-버
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
    events:
      - sqs:
          arn: ${self:custom.${self:provider.stage}.eventLogSqsArn}
          batchSize: 10
          maximumBatchingWindow: 60